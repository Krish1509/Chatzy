@tailwind base;
@tailwind components;
@tailwind utilities;

  /* Base custom cursor */
  .custom-cursor {
	position: fixed;
	width: 12px;
	height: 12px;
	background: radial-gradient(circle, rgba(135, 206, 235, 1) 40%, rgba(255, 223, 0, 1) 100%);
	border-radius: 50%;
	pointer-events: none;
	transform: translate(-50%, -50%);
	z-index: 9999;
	mix-blend-mode: difference;
	box-shadow: 0 0 8px rgba(135, 206, 235, 0.8), 0 0 12px rgba(255, 223, 0, 0.7);
	transition: transform 0.2s ease, box-shadow 0.3s ease, background 0.2s ease;
  }
  
  /* Hover effect for interactive elements */
  .custom-cursor.hover {
	width: 14px;
	height: 14px;
	box-shadow: 0 0 12px silver, 0 0 16px rgba(192, 192, 192, 0.8);
	background: radial-gradient(circle, rgba(192, 192, 192, 1) 60%, rgba(255, 255, 255, 1) 100%);
  }
  
  /* Text input focus effect */
  .custom-cursor.text {
	width: 10px;
	height: 16px;
	background: linear-gradient(45deg, rgba(192, 192, 192, 1), rgb(42, 156, 201));
	box-shadow: 0 0 10px rgba(192, 192, 192, 0.8), 0 0 15px rgb(137, 2, 168);
  }
  
  /* Pointer effect for buttons/links with feather-like shape */
  .custom-cursor.pointer {
	width: 14px;
	height: 20px;
	background: linear-gradient(to bottom, rgba(255, 223, 0, 1), rgba(192, 192, 192, 1));
	border-radius: 50% 50% 70% 70%;
	box-shadow: 0 0 12px rgba(255, 223, 0, 0.8), 0 0 18px rgba(192, 192, 192, 0.6);
  }
  
  /* Hide cursor for smaller screens */
  @media (max-width: 768px) {
	.custom-cursor {
	  display: none;
	}
  }
  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

.animate-fadeIn {
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes flipX {
	0% {
	  transform: rotateY(0deg) scale(1);
	}
	50% {
	  transform: rotateY(180deg) scale(1.05); /* Slightly scale up */
	}
	100% {
	  transform: rotateY(360deg) scale(1);
	}
  }
  
  /* Parent container with perspective */
  .icon-container {
	perspective: 600px; /* Further reduced perspective */
  }
  
  /* Styling for the flip animation */
  .flip {
	animation: flipX 7s ease-in-out infinite;
	transform-style: preserve-3d;
	box-shadow: 0 3px 10px rgba(0, 255, 255, 0.3); /* Even smaller shadow */
	border-radius: 50%;
	transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  /* Extra styling for the icon */
  .icon {
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 16px; /* Reduced font size */
	color: white;
	z-index: 1;
  }
  .ai-label {
	position: absolute;
	top: -3px;
	right: -3px;
	font-size: 6px; /* Even smaller font size for AI */
	background: rgba(0, 0, 0, 0.5);
	color: cyan;
	padding: 2px 4px;
	border-radius: 8px;
	font-weight: bold;
	text-shadow: 0 0 3px #00bcd4, 0 0 6px #00bcd4, 0 0 9px #00bcd4; /* Smaller neon glow */
  } 
body {
	background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("/assets/Backgrounds/bg2.gif");
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
}
  
.video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Place it behind all other content */
    overflow: hidden;
}
#bg-video {
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    z-index: -1;
    transform: translate(-50%, -50%);
    background-size: cover;
    background-position: center;
}

@keyframes send-animation {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Apply animation properties to .sendanimation */
.sendanimation {
    animation: send-animation 0.5s ease-out forwards;
    display: inline-block;
}
/* Define the keyframes for the sending animation */
@keyframes send-animation2 {
    100% {
        transform: translateX(100%);
        opacity: 1;
    }
    0% {
        transform: translateX(0%);
        opacity: 0;
    }
}


/* Define the keyframes for the receiving animation */
@keyframes receive-animation {
    0% {
        transform: translateX(-100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Apply animation properties to .receiveranimation */
.receiveranimation {
    animation: receive-animation 0.5s ease-out forwards;
    display: inline-block;
}
.message-container {
	display: flex;
	align-items: center;
	max-width: 100%;
  }
  
  .chat-bubble {
	word-wrap: break-word;
	white-space: pre-wrap;
	max-width: 100%;
  }
  
  .delete-button {
	margin-right: 8px;
  }
  
  .message {
	position: relative;
	padding: 10px;
	margin: 10px 0;
	background: #f4f4f4;
	border-radius: 5px;
	transition: all 0.3s ease-in-out;
  }
  
  .message.deleting {
	transform: translateY(100px) rotate(-45deg);
	opacity: 0;
  }
  
  .delete-btn {
	position: absolute;
	top: 10px;
	right: 10px;
	background: red;
	color: white;
	border: none;
	padding: 5px;
	cursor: pointer;
	border-radius: 50%;
	transition: all 0.3s ease-in-out;
  }
  
  .delete-btn:active {
	background: darkred;
  }
  
  .sparks {
	position: absolute;
	top: 50%;
	left: 50%;
	width: 50px;
	height: 50px;
	background: url('path_to_sparks_image.png') no-repeat center center;
	background-size: cover;
	transform: translate(-50%, -50%);
	animation: sparks 0.5s linear;
  }
  
  @keyframes sparks {
	0% {
	  opacity: 1;
	  transform: translate(-50%, -50%) scale(1);
	}
	100% {
	  opacity: 0;
	  transform: translate(-50%, -50%) scale(2);
	}
  }
  /* For Webkit browsers (Chrome, Safari) */
::-webkit-scrollbar {
	width: 8px; /* Thin scrollbar */
  }
  
  ::-webkit-scrollbar-track {
	background: #f1f1f1; /* Light grey track */
  }
  
  ::-webkit-scrollbar-thumb {
	background: #323232; /* Dark grey thumb */
	border-radius: 10px; /* Rounded corners */
  }
  
  /* For Firefox */
  * {
	scrollbar-width: thin; /* Thin scrollbar */
	scrollbar-color: #6B7280 #f1f1f100; /* Dark grey thumb and light grey track */
  }
  
  /* For Edge and other modern browsers (using Webkit) */
  .scroll-container {
	scrollbar-width: thin;
	scrollbar-color: #313131 #c6c6c6;
  }

  /* Add this to your Tailwind CSS file or within a <style> tag in your component */
.fullscreen-button {
	@apply p-2 bg-gray-800 text-white rounded-md fixed top-4 right-4;
  }
  
  .fullscreen-button:hover {
	@apply bg-gray-600;
  }
  
  @keyframes shake {
	0% { transform: rotate(0deg); }
	10% { transform: rotate(-10deg); }
	20% { transform: rotate(10deg); }
	30% { transform: rotate(-10deg); }
	40% { transform: rotate(10deg); }
	50% { transform: rotate(-10deg); }
	60% { transform: rotate(10deg); }
	70% { transform: rotate(-10deg); }
	80% { transform: rotate(10deg); }
	90% { transform: rotate(-10deg); }
	100% { transform: rotate(0deg); }
  }
  
  .shake-hand {
	display: inline-block;
	animation: shake 3s infinite;
	transform-origin: 70% 70%;
	font-size: 1.6rem;
  }
  .flex.items-center.justify-center.w-full.h-full {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}
/* Global CSS or a CSS module file */
.chat-section-enter {
	opacity: 0;
	transform: translateX(-10%);
  }
  
  .chat-section-enter-active {
	opacity: 1;
	transform: translateX(0%);
	transition: opacity 300ms ease-out, transform 300ms ease-out;
  }
  
  .chat-section-exit {
	opacity: 1;
	transform: translateX(0%);
  }
  
  .chat-section-exit-active {
	opacity: 0;
	transform: translateX(-10%);
	transition: opacity 300ms ease-in, transform 300ms ease-in;
  }
  

  @keyframes fadeInSlideIn {
	0% {
	  opacity: 0;
	  transform: translateX(20px);
	}
	100% {
	  opacity: 1;
	  transform: translateX(0);
	}
  }
  
  .message-container {
	animation: fadeInSlideIn 0.5s ease-in-out;
  }
  /* Add these styles to your CSS file (e.g., index.css) */

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

.chat-section-enter {
    animation: slideInFromRight 0.3s ease-out forwards;
}
@keyframes bounce {
	0%, 100% {
	  transform: translateY(0);
	}
	50% {
	  transform: translateY(-10px);
	}
  }
  @keyframes progress {
	0% {
		width: 0;
	}
	50% {
		width: 100%;
	}
	100% {
		width: 0;
	}
}
.animate-progress {
	animation: progress 4s linear infinite;
}
@keyframes food-floating {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}
.animate-food-floating img {
  animation: food-floating 5s infinite ease-in-out;
}
.typing-animation {
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid transparent;
    animation: typing 4s steps(30, end), blink 0.5s step-end infinite alternate;
  }
  
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
  
  @keyframes blink {
    from {
      border-color: transparent;
    }
    to {
      border-color: blue;
    }
  }
  
  .floating-quotes {
    animation: floating 3s infinite alternate;
  }
  
  @keyframes floating {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(-10px);
    }
  }
  